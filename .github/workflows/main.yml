name: Build and Release leetcli (Cross-platform)

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install vcpkg and dependencies
        shell: bash
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            ./vcpkg/bootstrap-vcpkg.bat
            ./vcpkg/vcpkg.exe install cpr nlohmann-json
          else
            ./vcpkg/bootstrap-vcpkg.sh
            ./vcpkg/vcpkg install cpr nlohmann-json
          fi

      - name: Configure CMake
        run: |
          mkdir build
          cmake -S . -B build -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=Release

      - name: Build leetcli
        run: cmake --build build --config Release --target install

      - name: Install leetcli
        run: cmake --install build --prefix install_dir

      - name: Package executable (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          mkdir dist
          copy install_dir\bin\leetcli.exe dist\leetcli.exe
          Compress-Archive -Path dist\leetcli.exe -DestinationPath leetcli-windows.zip

      - name: Package executable (macOS/Linux)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          mkdir -p dist
          cp install_dir/bin/leetcli dist/leetcli-${{ runner.os | downcase }}
          zip -j leetcli-${{ runner.os | downcase }}.zip dist/leetcli-${{ runner.os | downcase }}

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ runner.os == 'Windows' && 'leetcli-windows.zip' || runner.os == 'macOS' && 'leetcli-macos.zip' || 'leetcli-ubuntu.zip' }}
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
