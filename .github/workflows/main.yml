name: Build and Release leetcli (Cross-platform)

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install vcpkg and dependencies
        shell: bash
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            ./vcpkg/bootstrap-vcpkg.bat
            ./vcpkg/vcpkg.exe install cpr nlohmann-json
          else
            ./vcpkg/bootstrap-vcpkg.sh
            ./vcpkg/vcpkg install cpr nlohmann-json
          fi

      - name: Configure CMake
        run: |
          mkdir build
          cmake -S . -B build -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=Release

      - name: Build leetcli
        run: cmake --build build --config Release --target install

      - name: Install leetcli
        run: cmake --install build --prefix install_dir

      - name: Package executable
        shell: bash
        run: |
          mkdir -p dist
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cp install_dir/bin/leetcli.exe dist/leetcli.exe
            zip -j leetcli-windows.zip dist/leetcli.exe
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            cp install_dir/bin/leetcli dist/leetcli-macos
            zip -j leetcli-macos.zip dist/leetcli-macos
          else
            cp install_dir/bin/leetcli dist/leetcli-linux
            zip -j leetcli-linux.zip dist/leetcli-linux
          fi

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.os == 'windows-latest' && 'leetcli-windows.zip' || matrix.os == 'ubuntu-latest' && 'leetcli-linux.zip' || 'leetcli-macos.zip' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
