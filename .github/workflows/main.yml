name: Build and Release leetcli

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Package (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies (Linux/macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          sudo apt-get update || true
          sudo apt-get install -y cmake ninja-build || true

      - name: Install vcpkg
        shell: bash
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            ./vcpkg/bootstrap-vcpkg.bat
          else
            ./vcpkg/bootstrap-vcpkg.sh
          fi

      - name: Install vcpkg dependencies
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            ./vcpkg/vcpkg.exe install cpr nlohmann-json --triplet x64-windows-static
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            ./vcpkg/vcpkg install cpr nlohmann-json --triplet x64-linux
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            ./vcpkg/vcpkg install cpr nlohmann-json --triplet x64-osx
          fi

      - name: Configure CMake
        shell: bash
        run: |
          mkdir build
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cmake -S . -B build -G "Ninja" -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows-static -DCMAKE_BUILD_TYPE=Release
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            cmake -S . -B build -G "Ninja" -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-linux -DCMAKE_BUILD_TYPE=Release
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            cmake -S . -B build -G "Ninja" -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-osx -DCMAKE_BUILD_TYPE=Release
          fi

      - name: Build and Install
        shell: bash
        run: |
          cmake --build build --config Release --target install

      - name: Package Executable
        shell: bash
        run: |
          mkdir dist
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cp build/Release/leetcli.exe dist/leetcli.exe
            cp README.md dist/README.txt
            cd dist && 7z a ../leetcli-windows.zip *
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            cp build/leetcli dist/leetcli
            cp README.md dist/README.txt
            cd dist && zip ../leetcli-linux.zip *
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            cp build/leetcli dist/leetcli
            cp README.md dist/README.txt
            cd dist && zip ../leetcli-macos.zip *
          fi

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            leetcli-windows.zip
            leetcli-linux.zip
            leetcli-macos.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
